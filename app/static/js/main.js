// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
document.addEventListener('DOMContentLoaded', function() {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    const flashMessages = document.querySelectorAll('.flash-message');
    
    if (flashMessages.length > 0) {
        setTimeout(function() {
            flashMessages.forEach(message => {
                message.style.opacity = '0'; // –î–µ–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º
                setTimeout(() => {
                    message.remove(); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ DOM –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
                }, 500);
            });
        }, 3000);
    }
});

// –ù–∞–±–æ—Ä –ø–æ–ª–µ–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
const MoodMapUtils = {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∏–Ω—É—Ç–∞—Ö
    // (–Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏)
    getUserTimezoneOffset: function() {
        return new Date().getTimezoneOffset();
    },
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ UTC (–≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏) –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    // dateString - —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO (–Ω–∞–ø—Ä–∏–º–µ—Ä, "2023-05-20T14:30:00")
    convertToUserTimezone: function(dateString) {
        // –î–æ–±–∞–≤–ª—è–µ–º 'Z' –≤ –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –≤—Ä–µ–º—è –≤ UTC
        const date = new Date(dateString + 'Z');
        return date;
    },
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —É–¥–æ–±–Ω–æ–º –≤–∏–¥–µ (–¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è)
    formatDate: function(dateString) {
        const date = this.convertToUserTimezone(dateString);
        return date.toLocaleString(); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç "–î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:–°–°"
    },
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞—è —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è
    formatTime: function(dateString) {
        const date = this.convertToUserTimezone(dateString);
        return date.toLocaleTimeString(); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç "–ß–ß:–ú–ú:–°–°"
    },
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞—è —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
    formatShortDate: function(dateString) {
        const date = this.convertToUserTimezone(dateString);
        return date.toLocaleDateString(); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç "–î–î.–ú–ú.–ì–ì–ì–ì"
    },
    
    // –í—ã—á–∏—Å–ª—è–µ—Ç, —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–æ—à–ª–æ –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç–æ–π
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ ("–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –º–∏–Ω—É—Ç" –∏ —Ç.–¥.)
    getMinutesDifference: function(timestamp) {
        const now = new Date(); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        const date = this.convertToUserTimezone(timestamp); // –£–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        return Math.floor((now - date) / (1000 * 60)); // –†–∞–∑–Ω–∏—Ü–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö / (1000 * 60) = –º–∏–Ω—É—Ç—ã
    },
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
    isWithinTimeFrame: function(timestamp, minutes) {
        if (!minutes) return true; // –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–µ —É–∫–∞–∑–∞–Ω, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç
        
        try {
            const diffMinutes = this.getMinutesDifference(timestamp);
            return diffMinutes <= minutes; // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–Ω—Ç–µ—Ä–≤–∞–ª—É
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞:', e);
            return true; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç
        }
    },
    
    // –í—ã—á–∏—Å–ª—è–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ –Ω–∞ –ó–µ–º–ª–µ –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–æ—Ä–º—É–ª—É –≥–∞–≤–µ—Ä—Å–∏–Ω—É—Å–∞ –¥–ª—è —É—á–µ—Ç–∞ —Å—Ñ–µ—Ä–∏—á–Ω–æ—Å—Ç–∏ –ó–µ–º–ª–∏
    calculateDistance: function(lat1, lon1, lat2, lon2) {
        const R = 6371; // –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö
        const dLat = this.deg2rad(lat2 - lat1); // –†–∞–∑–Ω–∏—Ü–∞ —à–∏—Ä–æ—Ç –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö
        const dLon = this.deg2rad(lon2 - lon1); // –†–∞–∑–Ω–∏—Ü–∞ –¥–æ–ª–≥–æ—Ç –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö
        const a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * 
            Math.sin(dLon/2) * Math.sin(dLon/2); 
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
        const d = R * c; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö
        return d;
    },
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≥—Ä–∞–¥—É—Å—ã –≤ —Ä–∞–¥–∏–∞–Ω—ã
    // –ù—É–∂–Ω–æ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ä–∞–¥–∏–∞–Ω–∞–º–∏
    deg2rad: function(deg) {
        return deg * (Math.PI/180); // –ì—Ä–∞–¥—É—Å—ã * (–ü–∏/180) = —Ä–∞–¥–∏–∞–Ω—ã
    },
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä–æ–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ
    getDominantMood: function(moods) {
        const moodCounts = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–∂–¥–æ–≥–æ —ç–º–æ–¥–∑–∏
        let maxCount = 0; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        let dominantMood = null; // –ü—Ä–µ–æ–±–ª–∞–¥–∞—é—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        
        moods.forEach(mood => {
            if (!moodCounts[mood.emoji]) {
                moodCounts[mood.emoji] = 0; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ —ç–º–æ–¥–∑–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤–ø–µ—Ä–≤—ã–µ
            }
            moodCounts[mood.emoji]++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —ç—Ç–æ–≥–æ —ç–º–æ–¥–∑–∏
            
            if (moodCounts[mood.emoji] > maxCount) {
                maxCount = moodCounts[mood.emoji]; // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                dominantMood = mood.emoji; // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—â–µ–µ —ç–º–æ–¥–∑–∏
            }
        });
        
        return dominantMood; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—â–µ–µ —ç–º–æ–¥–∑–∏
    },
    
    // –í—ã—á–∏—Å–ª—è–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100, –≥–¥–µ 100 - –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ
    getMoodPercentage: function(moods) {
        if (!moods || moods.length === 0) return 50; // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 50% (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ)
        
        const positiveEmojis = ['üòä', 'üòé', 'ü•∞']; // –°–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö —ç–º–æ–¥–∑–∏
        const negativeEmojis = ['üò¢', 'üò°', 'üò∑']; // –°–ø–∏—Å–æ–∫ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —ç–º–æ–¥–∑–∏
        
        let positiveCount = 0;
        let negativeCount = 0;
        
        moods.forEach(mood => {
            if (positiveEmojis.includes(mood.emoji)) {
                positiveCount++;
            } else if (negativeEmojis.includes(mood.emoji)) {
                negativeCount++;
            }
        });
        
        const total = positiveCount + negativeCount; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
        if (total === 0) return 50; // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö, –Ω–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 50%
        
        return Math.round((positiveCount / total) * 100); // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
    },
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–æ—á–∫–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    isWithinRadius: function(centerLat, centerLng, pointLat, pointLng, radiusKm) {
        const distance = this.calculateDistance(centerLat, centerLng, pointLat, pointLng);
        return distance <= radiusKm; // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ —Ä–∞–¥–∏—É—Å—É
    },
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∫–∞—Ä—Ç–µ
    getPrivacyOffset: function() {
        return (Math.random() - 0.5) * 0.002; // –ü—Ä–∏–º–µ—Ä–Ω–æ 100-200 –º–µ—Ç—Ä–æ–≤ —Å–º–µ—â–µ–Ω–∏—è –≤ —Å–ª—É—á–∞–π–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
    }
};